[{"C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\index.js":"1","C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\App.js":"2","C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\ModalPortal\\MyModal\\MyModal.jsx":"4","C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\modules\\root.js":"5","C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\containers\\LoginContainer.jsx":"6","C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\containers\\SignContainer.jsx":"7","C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\containers\\RoutineContainer.jsx":"8","C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\containers\\NewRoutineContainer.jsx":"9","C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\ModalPortal\\MyModal\\components\\Modalloaders.jsx":"10","C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\modules\\newRoutine.js":"11","C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\modules\\logout.js":"12","C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\modules\\user.js":"13","C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\modules\\userSign.js":"14","C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\modules\\getRoutine.js":"15","C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\components\\Signup.jsx":"16","C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\components\\Login.jsx":"17","C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\components\\Routine.jsx":"18","C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\components\\NewRoutine.jsx":"19","C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\modules\\services\\AuthService.js":"20"},{"size":619,"mtime":1611284869484,"results":"21","hashOfConfig":"22"},{"size":2137,"mtime":1611284149766,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":510,"mtime":1611201441303,"results":"25","hashOfConfig":"22"},{"size":889,"mtime":1611293136346,"results":"26","hashOfConfig":"22"},{"size":427,"mtime":1611284149813,"results":"27","hashOfConfig":"22"},{"size":370,"mtime":1611284149829,"results":"28","hashOfConfig":"22"},{"size":1187,"mtime":1611294588220,"results":"29","hashOfConfig":"22"},{"size":607,"mtime":1611293351201,"results":"30","hashOfConfig":"22"},{"size":220,"mtime":1611201441315,"results":"31","hashOfConfig":"22"},{"size":1467,"mtime":1611284149846,"results":"32","hashOfConfig":"22"},{"size":656,"mtime":1611284149842,"results":"33","hashOfConfig":"22"},{"size":1708,"mtime":1611284846348,"results":"34","hashOfConfig":"22"},{"size":1744,"mtime":1611284846355,"results":"35","hashOfConfig":"22"},{"size":3323,"mtime":1611295109449,"results":"36","hashOfConfig":"22"},{"size":4598,"mtime":1611284149801,"results":"37","hashOfConfig":"22"},{"size":1149,"mtime":1611284388145,"results":"38","hashOfConfig":"22"},{"size":5095,"mtime":1611289647246,"results":"39","hashOfConfig":"22"},{"size":4169,"mtime":1611289367820,"results":"40","hashOfConfig":"22"},{"size":217,"mtime":1611201441358,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"nzaw8a",{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"45"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"45"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"45"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"45"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\index.js",["90","91","92","93"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\nimport MyModal from './ModalPortal/MyModal/MyModal';\r\nconst history = createBrowserHistory();\r\n// // import { createStore } from 'redux';\r\n// import { Provider } from 'react-redux';\r\n// const store = createStore();\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nreportWebVitals();\r\n",["94","95"],"C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\App.js",["96"],"import { Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { rootReducer, rootSaga } from './modules/root';\r\nimport LoginContainer from './containers/LoginContainer';\r\nimport { ConnectedRouter, routerMiddleware } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\nimport SignContainer from './containers/SignContainer';\r\nimport NewRoutineContainer from './containers/NewRoutineContainer';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport persistReducer from '../node_modules/redux-persist/es/persistReducer';\r\nimport persistStore from '../node_modules/redux-persist/es/persistStore';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport MyModal from './ModalPortal/MyModal/MyModal';\r\nimport RoutineContainer from './containers/RoutineContainer';\r\n\r\nconst history = createBrowserHistory();\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n};\r\nconst enhancedReducer = persistReducer(persistConfig, rootReducer(history));\r\nconst store = createStore(\r\n  enhancedReducer,\r\n  composeWithDevTools(applyMiddleware(routerMiddleware(history), sagaMiddleware)),\r\n);\r\nsagaMiddleware.run(rootSaga);\r\n\r\nconst persistor = persistStore(store);\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <div className=\"App\">\r\n          <ConnectedRouter history={history}>\r\n            <Switch>\r\n              <Route path=\"/login\" component={LoginContainer} />\r\n              <Route path=\"/newroutine\" component={NewRoutineContainer} />\r\n              <Route path=\"/signup\" component={SignContainer} />\r\n              <Route path=\"/\" exact component={RoutineContainer} />\r\n            </Switch>\r\n          </ConnectedRouter>\r\n        </div>\r\n        {/* <MyModal /> */}\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\ModalPortal\\MyModal\\MyModal.jsx",["97","98"],"import React, { useState } from 'react';\r\nimport Modalloaders from './components/Modalloaders';\r\nimport './MyModal.scss';\r\n\r\nconst MyModal = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [state, setState] = useState(false);\r\n  return (\r\n    <div className=\"modal\">\r\n      <div>\r\n        <div>{loading && <Modalloaders />}</div>\r\n        {state || <p>이메일이 중복 되었습니다.</p>}\r\n        <button>닫기</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyModal;\r\n","C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\modules\\root.js",["99"],"import { all } from 'redux-saga/effects';\r\nimport { combineReducers } from 'redux';\r\nimport userInfo, { userSaga } from './user';\r\nimport { connectRouter } from 'connected-react-router';\r\nimport signinfo, { signupSaga } from './userSign';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport routine, {\r\n  watchGetRoutineSaga,\r\n  watchEditRoutineSaga,\r\n  watchNewRoutineSaga,\r\n  watchRemoveRoutineSaga,\r\n} from './getRoutine';\r\nimport { LogoutRoutineSaga } from './logout';\r\nexport const rootReducer = history =>\r\n  combineReducers({\r\n    userInfo,\r\n    signinfo,\r\n    routine,\r\n    router: connectRouter(history),\r\n  });\r\n\r\n// 사가 합치기\r\nexport function* rootSaga() {\r\n  yield all([\r\n    userSaga(),\r\n    signupSaga(),\r\n    watchNewRoutineSaga(),\r\n    watchGetRoutineSaga(),\r\n    watchRemoveRoutineSaga(),\r\n    watchEditRoutineSaga(),\r\n    LogoutRoutineSaga(),\r\n  ]);\r\n}\r\n","C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\containers\\LoginContainer.jsx",[],"C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\containers\\SignContainer.jsx",[],"C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\containers\\RoutineContainer.jsx",[],"C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\containers\\NewRoutineContainer.jsx",[],"C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\ModalPortal\\MyModal\\components\\Modalloaders.jsx",[],"C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\modules\\newRoutine.js",[],"C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\modules\\logout.js",[],"C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\modules\\user.js",[],"C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\modules\\userSign.js",[],"C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\modules\\getRoutine.js",["100"],"C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\components\\Signup.jsx",["101","102","103","104"],"import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport MyModal from '../ModalPortal/MyModal/MyModal';\r\nimport userService from '../modules/services/AuthService';\r\nimport './Signup.scss';\r\n\r\nexport default function Signup({ onSign }) {\r\n  const id = useRef();\r\n  const pass = useRef();\r\n  const repass = useRef();\r\n  const name = useRef();\r\n  const failid = useRef();\r\n  const birthday = useRef();\r\n  const formData = useRef();\r\n\r\n  const [checked, setChecked] = useState({\r\n    check: false,\r\n    email: false,\r\n    pass: false,\r\n  });\r\n  const [btn, setBtn] = useState(false);\r\n\r\n  const Submit = useCallback(\r\n    e => {\r\n      e.preventDefault();\r\n      const obj = {};\r\n      const formData = new FormData(e.target);\r\n      for (let [key, value] of formData.entries()) {\r\n        obj[key] = value;\r\n      }\r\n      console.log(obj);\r\n      onSign(obj);\r\n    },\r\n    [onSign],\r\n  );\r\n  const click = async e => {\r\n    e.preventDefault();\r\n\r\n    const userId = await userService.getUser(id.current.value);\r\n    console.log(id.current.value);\r\n    console.log(checked);\r\n    if (userId.length) {\r\n      console.log('중복');\r\n      setChecked({ ...checked, check: true });\r\n    } else {\r\n      setChecked({ ...checked, check: false });\r\n    }\r\n    // console.log(checked);\r\n  };\r\n  const passChange = useCallback(() => {\r\n    console.log(checked);\r\n    if (pass.current.value === repass.current.value) {\r\n      setChecked({ ...checked, pass: false });\r\n    } else {\r\n      setChecked({ ...checked, pass: true });\r\n    }\r\n  }, [checked]);\r\n  const isEmail = asValue => {\r\n    let regExp = /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\r\n\r\n    return regExp.test(asValue); // 형식에 맞는 경우 true 리턴\r\n  };\r\n  const emailChange = useCallback(() => {\r\n    if (isEmail(id.current.value)) {\r\n      setChecked({ ...checked, email: false });\r\n    } else {\r\n      setChecked({ ...checked, email: true });\r\n    }\r\n  }, [checked]);\r\n\r\n  const checkInput = () => {\r\n    console.log(typeof birthday.current.maxLength);\r\n    console.log(typeof +birthday.current.value);\r\n    if (\r\n      id.current.value !== '' &&\r\n      pass.current.value !== '' &&\r\n      repass.current.value !== '' &&\r\n      name.current.value !== '' &&\r\n      birthday.current.maxLength !== +birthday.current.value\r\n    ) {\r\n      setBtn(true);\r\n    } else {\r\n      setBtn(false);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"Signup\">\r\n      <h1>만나서 반가워요!</h1>\r\n      <p>알찬 하루를 보낼 준비가 됐나요?</p>\r\n      <form onSubmit={Submit} ref={formData} onChange={checkInput}>\r\n        <div>\r\n          <label htmlFor=\"user-id\" ref={failid}>\r\n            이메일 * <span>{checked.check && '아이디가 중복되었습니다.'}</span>\r\n            <span>{checked.email && '이메일 형식이 아닙니다.'}</span>\r\n          </label>\r\n          <input type=\"email\" onChange={emailChange} required name=\"user-id\" ref={id} />\r\n          <button onClick={click}>중복 확인</button>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"user-pass\">비밀번호 *</label>\r\n          <input type=\"password\" required name=\"user-pass\" ref={pass} />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"user-repass\">비밀번호 *</label>\r\n          <input type=\"password\" required name=\"user-repass\" onChange={passChange} ref={repass} />\r\n          <span className=\"user-pass\">{checked.pass && '비밀번호가 다릅니다.'}</span>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"user-name\">이름 *</label>\r\n          <input type=\"text\" required name=\"user-name\" ref={name} />\r\n        </div>\r\n        <div>\r\n          <label>성별</label>\r\n          <ul className=\"gender-list\">\r\n            <li>남</li>\r\n            <li>녀</li>\r\n          </ul>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"user-birth\">생년월일</label>\r\n          <input\r\n            type=\"text\"\r\n            maxLength=\"6\"\r\n            placeholder=\"ex)950812\"\r\n            required\r\n            ref={birthday}\r\n            name=\"user-birth\"\r\n          />\r\n        </div>\r\n        <div class=\"check-div\">\r\n          <input type=\"checkbox\" name=\"user-ok\" />\r\n          <span>마이루틴의 이용약관과 개인정 취급방식에 동의합니다.</span>\r\n        </div>\r\n        {btn ? (\r\n          <button type=\"submit\">하루 관리 시작하기</button>\r\n        ) : (\r\n          <button type=\"submit\" disabled>\r\n            하루 관리 시작하기\r\n          </button>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\components\\Login.jsx",[],"C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\components\\Routine.jsx",["105","106","107","108"],"import { useEffect, useRef, useState } from 'react';\r\nimport { BsPlus } from 'react-icons/bs';\r\nimport './Routine.scss';\r\nimport { MdAccessTime } from 'react-icons/md';\r\nimport { GiHistogram } from 'react-icons/gi';\r\nimport { BsFillPersonFill } from 'react-icons/bs';\r\nimport { FiMoreHorizontal } from 'react-icons/fi';\r\nimport Moment from 'react-moment';\r\nimport 'moment/locale/ko';\r\n\r\nimport moment from 'moment';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Lilist = ({ routines, removeRoutine, editRoutine }) => {\r\n  const today = new Date();\r\n  const boldDay = today.getDay(); // 4\r\n\r\n  const allDays = [\r\n    { id: 0, day: '일' },\r\n    { id: 1, day: '월' },\r\n    { id: 2, day: '화' },\r\n    { id: 3, day: '수' },\r\n    { id: 4, day: '목' },\r\n    { id: 5, day: '금' },\r\n    { id: 6, day: '토' },\r\n  ];\r\n  const checkDay = allDays.filter(today => today.id === boldDay);\r\n\r\n  const StyleDay = ({ days }) => {\r\n    console.log(days);\r\n    return days.map(day => {\r\n      return checkDay[0].day === day ? (\r\n        <span style={{ color: 'black' }}>{day}</span>\r\n      ) : (\r\n        <span>{day}</span>\r\n      );\r\n    });\r\n  };\r\n  const RoutineLi = ({ routine }) => {\r\n    const [menuActive, setMenuState] = useState(false);\r\n    const [formActive, setFormState] = useState(false);\r\n    const [text, setTextState] = useState(routine.routine);\r\n\r\n    const input = useRef();\r\n    const iconBtn = useRef();\r\n    const btns = useRef();\r\n\r\n    const showBtns = () => {\r\n      setMenuState(!menuActive);\r\n      setFormState(false);\r\n    };\r\n\r\n    const showform = () => {\r\n      setFormState(!formActive);\r\n    };\r\n\r\n    const onChange = e => {\r\n      setTextState(e.target.value);\r\n    };\r\n    const onSubmit = e => {\r\n      e.preventDefault();\r\n    };\r\n\r\n    return (\r\n      <li className=\"Routine-list\" key={routine.id}>\r\n        <form className={formActive ? 'show' : ''} onSubmit={onSubmit}>\r\n          <input type=\"text\" value={text} name=\"modifyText\" ref={input} onChange={onChange} />\r\n          <button\r\n            onClick={() => {\r\n              editRoutine(routine.id, input.current.value);\r\n            }}\r\n          >\r\n            수정완료\r\n          </button>\r\n        </form>\r\n        <p className={!formActive ? 'show' : ''}>{routine.routine}</p>\r\n        <time style={{ fontWeight: 'bold' }}>\r\n          {routine.startTime} ~ {routine.endTime} <StyleDay days={routine.day} />\r\n        </time>\r\n        <div className={`Routine-btn ${menuActive ? 'show' : ''}`} ref={btns}>\r\n          <button onClick={showform}>수정</button>\r\n          <button\r\n            onClick={() => {\r\n              removeRoutine(routine.id);\r\n            }}\r\n          >\r\n            삭제\r\n          </button>\r\n        </div>\r\n        <button ref={iconBtn} onClick={showBtns}>\r\n          <FiMoreHorizontal />\r\n        </button>\r\n      </li>\r\n    );\r\n  };\r\n\r\n  return routines.map(routine => <RoutineLi routine={routine} />);\r\n};\r\nlet timeId = time => {\r\n  setTimeout(() => {\r\n    console.log('알람입니다');\r\n  }, time);\r\n};\r\n\r\nconst today = new Date();\r\nlet hour = today.getHours();\r\nconst nowTime =\r\n  hour > 6 && hour < 12\r\n    ? '아침'\r\n    : hour > 12 && hour < 18\r\n    ? '오후'\r\n    : hour > 18 && hour < 21\r\n    ? '저녁'\r\n    : '밤';\r\n\r\nconst messages = [\r\n  `평온한 ${nowTime} 입니다  :)`,\r\n  `어떤 ${nowTime}시간을 보내고 계신가요?`,\r\n  '나른함을 깨워줄 음악을 들어보세요!',\r\n  '루티너와 함께 일상을 변화시켜요!',\r\n  '좋은 변화는 좋은 습관에서 시작해요!',\r\n  '작은 좋은 습관이 큰 변화를 만듭니다.',\r\n];\r\n\r\nconst randomItem = messages[Math.floor(Math.random() * messages.length)];\r\n\r\nconst Routine = ({ routines, getRoutine, onLogout, history, removeRoutine, editRoutine }) => {\r\n  useEffect(() => {\r\n    getRoutine();\r\n  }, []);\r\n  console.log(history);\r\n\r\n  const logout = () => {\r\n    onLogout();\r\n    localStorage.removeItem('token');\r\n  };\r\n  const click = () => {\r\n    history.push('/newroutine');\r\n  };\r\n  return (\r\n    <div className=\"Routine\">\r\n      <div className=\"header\">\r\n        <time>\r\n          <Moment interval={1000} format=\"M.DD (dd) hh:mm A\" />\r\n        </time>\r\n        <h1>\r\n          <p>{randomItem}</p>\r\n        </h1>\r\n        <div className=\"logoutbtn\">\r\n          <button onClick={logout}>로그아웃</button>\r\n        </div>\r\n      </div>\r\n      <ul className=\"section\">\r\n        <Lilist routines={routines} removeRoutine={removeRoutine} editRoutine={editRoutine} />\r\n      </ul>\r\n      <div className=\"plus\">\r\n        <button onClick={click}>\r\n          <BsPlus />\r\n        </button>\r\n      </div>\r\n      <nav className=\"navigation\">\r\n        <ul>\r\n          <li>\r\n            <button>\r\n              <MdAccessTime />\r\n            </button>\r\n          </li>\r\n          <li>\r\n            <button>\r\n              <GiHistogram />\r\n            </button>\r\n          </li>\r\n          <li>\r\n            <button>\r\n              <BsFillPersonFill />\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Routine;\r\n","C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\components\\NewRoutine.jsx",["109","110"],"import React, { useCallback, useRef, useState } from 'react';\r\nimport './NewRoutine.scss';\r\nimport 'antd/dist/antd.css';\r\nimport { Form, Input, Checkbox, Switch, Select, TimePicker } from 'antd';\r\nimport { IoIosArrowRoundForward } from 'react-icons/io';\r\nimport date from 'date-and-time';\r\n\r\nconst NewRoutine = ({ onRoutine, history }) => {\r\n  const form = useRef();\r\n  const audio = useRef();\r\n\r\n  const [alarm, setAlarm] = useState('');\r\n\r\n  let message = '1번 울리기';\r\n  //const [state, setState] = useState(message);\r\n\r\n  const format = 'HH:mm';\r\n\r\n  const options = [\r\n    { label: '일', value: '일' },\r\n    { label: '월', value: '월' },\r\n    { label: '화', value: '화' },\r\n    { label: '수', value: '수' },\r\n    { label: '목', value: '목' },\r\n    { label: '금', value: '금' },\r\n    { label: '토', value: '토' },\r\n  ];\r\n\r\n  const onAlarmChange = alarm => {\r\n    setAlarm(alarm);\r\n    audio.current.src = `./audio/${alarm}.mp3`;\r\n    audio.current.play();\r\n  };\r\n\r\n  const onFinish = useCallback(\r\n    values => {\r\n      for (const key in values) {\r\n        if (key === 'alarmSound' && values[key] === undefined) values[key] = 'none';\r\n        if (key === 'day' && values[key] === undefined) values[key] = [];\r\n        values[key] = values[key] === undefined ? false : values[key];\r\n      }\r\n      const id = new Date().getTime();\r\n\r\n      let getValues = values;\r\n\r\n      getValues = {\r\n        id,\r\n        ...values,\r\n        startTime: date.format(getValues.startTime._d, 'hh:mm'),\r\n        endTime: date.format(getValues.endTime._d, 'hh:mm'),\r\n      };\r\n      onRoutine(getValues);\r\n    },\r\n    [onRoutine],\r\n  );\r\n  const cancelBtn = () => {\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <div className=\"NewRoutine\">\r\n      <h1>\r\n        + New <br /> Routine\r\n      </h1>\r\n      <Form onFinish={onFinish} ref={form}>\r\n        <Form.Item name=\"routine\">\r\n          <Input placeholder=\"새 루틴을 추가해주세요\" />\r\n        </Form.Item>\r\n        <Form.Item name=\"day\">\r\n          <Checkbox.Group options={options} />\r\n        </Form.Item>\r\n\r\n        <h2>시작 알림</h2>\r\n        <div className=\"theme\">\r\n          <div className=\"toggle\">\r\n            <div className=\"active\">활성화</div>\r\n            <Form.Item name=\"alram\">\r\n              <Switch />\r\n            </Form.Item>\r\n          </div>\r\n        </div>\r\n        <div className=\"theme\">\r\n          <div className=\"time\">시간</div>\r\n          <Form.Item name=\"startTime\">\r\n            <TimePicker placeholder=\"Start Time\" format={format} />\r\n          </Form.Item>\r\n          <IoIosArrowRoundForward />\r\n          <Form.Item name=\"endTime\">\r\n            <TimePicker placeholder=\"End Time\" format={format} />\r\n          </Form.Item>\r\n        </div>\r\n        <div className=\"theme\">\r\n          <div className=\"frequency\">빈도</div>\r\n          <span>\r\n            <Form.Item name=\"frequency\">\r\n              <Select defaultValue=\"1번 울리기\">\r\n                <Select value=\"1번 울리기\">1번 울리기</Select>\r\n                <Select value=\"1분단위로 3번 울리기\">1분단위로 3번 울리기</Select>\r\n                <Select value=\"5분 간격 3번 울리기\">5분 간격 3번 울리기</Select>\r\n              </Select>\r\n            </Form.Item>\r\n          </span>\r\n        </div>\r\n        <h2>타이머 종료 알림</h2>\r\n        <div className=\"alarm\">\r\n          <Form.Item name=\"alarmSound\">\r\n            <Select defaultValue=\"알람 없음\" onChange={onAlarmChange}>\r\n              <Select value=\"none\">알람 없음</Select>\r\n              <Select value=\"bell\">벨 소리</Select>\r\n              <Select value=\"knock\">노크 소리</Select>\r\n            </Select>\r\n          </Form.Item>\r\n        </div>\r\n        <div className=\"button-wrap\">\r\n          <button className=\"button\" onClick={cancelBtn} type=\"reset\">\r\n            취소\r\n          </button>\r\n          <button className=\"button\" type=\"submit\">\r\n            완료\r\n          </button>\r\n        </div>\r\n      </Form>\r\n      <audio controls ref={audio} autoplay>\r\n        <source src=\"\" type=\"audio/mp3\" />\r\n      </audio>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewRoutine;\r\n","C:\\Users\\user\\Documents\\패캠\\react\\progreser\\src\\modules\\services\\AuthService.js",[],{"ruleId":"111","severity":1,"message":"112","line":6,"column":10,"nodeType":"113","messageId":"114","endLine":6,"endColumn":23},{"ruleId":"111","severity":1,"message":"115","line":7,"column":10,"nodeType":"113","messageId":"114","endLine":7,"endColumn":25},{"ruleId":"111","severity":1,"message":"116","line":9,"column":8,"nodeType":"113","messageId":"114","endLine":9,"endColumn":15},{"ruleId":"111","severity":1,"message":"117","line":10,"column":7,"nodeType":"113","messageId":"114","endLine":10,"endColumn":14},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"111","severity":1,"message":"116","line":17,"column":8,"nodeType":"113","messageId":"114","endLine":17,"endColumn":15},{"ruleId":"111","severity":1,"message":"122","line":6,"column":19,"nodeType":"113","messageId":"114","endLine":6,"endColumn":29},{"ruleId":"111","severity":1,"message":"123","line":7,"column":17,"nodeType":"113","messageId":"114","endLine":7,"endColumn":25},{"ruleId":"111","severity":1,"message":"124","line":6,"column":21,"nodeType":"113","messageId":"114","endLine":6,"endColumn":32},{"ruleId":"111","severity":1,"message":"125","line":12,"column":7,"nodeType":"113","messageId":"114","endLine":12,"endColumn":13},{"ruleId":"111","severity":1,"message":"126","line":1,"column":30,"nodeType":"113","messageId":"114","endLine":1,"endColumn":39},{"ruleId":"111","severity":1,"message":"116","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":15},{"ruleId":"127","severity":1,"message":"128","line":58,"column":35,"nodeType":"129","messageId":"130","endLine":58,"endColumn":36,"suggestions":"131"},{"ruleId":"127","severity":1,"message":"128","line":58,"column":68,"nodeType":"129","messageId":"130","endLine":58,"endColumn":69,"suggestions":"132"},{"ruleId":"111","severity":1,"message":"133","line":11,"column":8,"nodeType":"113","messageId":"114","endLine":11,"endColumn":14},{"ruleId":"111","severity":1,"message":"134","line":12,"column":10,"nodeType":"113","messageId":"114","endLine":12,"endColumn":21},{"ruleId":"111","severity":1,"message":"135","line":99,"column":5,"nodeType":"113","messageId":"114","endLine":99,"endColumn":11},{"ruleId":"136","severity":1,"message":"137","line":130,"column":6,"nodeType":"138","endLine":130,"endColumn":8,"suggestions":"139"},{"ruleId":"111","severity":1,"message":"140","line":12,"column":10,"nodeType":"113","messageId":"114","endLine":12,"endColumn":15},{"ruleId":"111","severity":1,"message":"141","line":14,"column":7,"nodeType":"113","messageId":"114","endLine":14,"endColumn":14},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'ConnectedRouter' is defined but never used.","'MyModal' is defined but never used.","'history' is assigned a value but never used.","no-native-reassign",["142"],"no-negated-in-lhs",["143"],"'setLoading' is assigned a value but never used.","'setState' is assigned a value but never used.","'formReducer' is defined but never used.","'GETADD' is assigned a value but never used.","'useEffect' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["144","145"],["146","147"],"'moment' is defined but never used.","'useSelector' is defined but never used.","'timeId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRoutine'. Either include it or remove the dependency array. If 'getRoutine' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["148"],"'alarm' is assigned a value but never used.","'message' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"149","fix":"150","desc":"151"},{"messageId":"152","fix":"153","desc":"154"},{"messageId":"149","fix":"155","desc":"151"},{"messageId":"152","fix":"156","desc":"154"},{"desc":"157","fix":"158"},"removeEscape",{"range":"159","text":"160"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"161","text":"162"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"163","text":"160"},{"range":"164","text":"162"},"Update the dependencies array to be: [getRoutine]",{"range":"165","text":"166"},[1628,1629],"",[1628,1628],"\\",[1661,1662],[1661,1661],[3622,3624],"[getRoutine]"]